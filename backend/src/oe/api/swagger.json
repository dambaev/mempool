{
  "swagger": "2.0",
  "info": {
    "description": "OpEnergy",
    "license": {
      "name": "MIT",
      "url": "http://mit.com"
    },
    "title": "OpEnergy API",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/swagger.json": {
      "get": {
        "description": "Returns Swagger specification in JSON format",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/register": {
      "post": {
        "description": "Registers new user and returns randomly generated account secret and account token.\n Account secret should be used for /login API encpoint.\n Account token should be used in the rest API calls as an authentication cookie",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegisterResult"
            }
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "description": "Performs login with given account secret. Returns AccountToken value for being used with the rest API calls",
        "consumes": [
          "application/json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountSecret"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountToken"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid `body`"
          }
        }
      }
    },
    "/api/v1/strike/mediantime": {
      "get": {
        "description": "Returns list of strikes created by mediantime",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/TimeStrike"
              },
              "type": "array"
            }
          }
        }
      },
      "post": {
        "description": "Creates new strike defined by BlockHeight and NLockTime values",
        "consumes": [
          "application/json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTimeStrikeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TimeStrike"
            }
          },
          "400": {
            "description": "Invalid `body`"
          }
        }
      }
    },
    "/api/v1/strike/block/mediantime": {
      "get": {
        "description": "Returns list of strikes by a given block height",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "block_height",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/TimeStrike"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid `block_height`"
          }
        }
      }
    },
    "/api/v1/slowfastguess/mediantime": {
      "get": {
        "description": "",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "block_height",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "nlocktime",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/SlowFastGuess"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid `nlocktime` or `block_height`"
          }
        }
      },
      "post": {
        "description": "Creates a slow/fast guess for a given time strike",
        "consumes": [
          "application/json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSlowFastGuessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SlowFastGuess"
            }
          },
          "400": {
            "description": "Invalid `body`"
          }
        }
      }
    },
    "/api/v1/strikeshistory/mediantime": {
      "get": {
        "description": "Returns list of archived time strikes  (ie, already fired and moved into an archive)",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/TimeStrikeHistory"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "/api/v1/slowfastresults/mediantime": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "format": "b8ab3013e4ddb35fae6cedc9d84c86fd280157b7a93b984c0b40baf7f21b8f72",
            "in": "query",
            "name": "account_token",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "nlocktime",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "block_height",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/SlowFastResult"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid `block_height` or `nlocktime` or `account_token`"
          }
        }
      }
    },
    "/api/v1/user/displayname": {
      "post": {
        "description": "Updates displayname for a given user",
        "consumes": [
          "application/json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostUserDisplayNameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": [],
              "items": {},
              "maxItems": 0,
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid `body`"
          }
        }
      }
    },
    "/api/v1/statistics/{blockheight}/{span}": {
      "get": {
        "description": "Calculates NBDR statistics for a given block height and span",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "blockheight",
            "required": true,
            "type": "number"
          },
          {
            "in": "path",
            "name": "span",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Statistics"
            }
          },
          "400": {
            "description": "Invalid `span` or `blockheight`"
          }
        }
      }
    },
    "/api/v1/oe/block/{hash}": {
      "get": {
        "description": "Returns block's header by a given block hash, including chainwork, that is missing from mempool's blocks' headers cache",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "hash",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Block"
            }
          },
          "400": {
            "description": "Invalid `hash`"
          }
        }
      }
    },
    "/api/v1/oe/blockbyheight/{height}": {
      "get": {
        "description": "Returns block's header by a given block height",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "height",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Block"
            }
          },
          "400": {
            "description": "Invalid `height`"
          }
        }
      }
    },
    "/api/v1/oe/blockspanlist/{startBlockHeight}/{span}/{numberOfSpan}": {
      "get": {
        "description": "Returns list of spans started from startBlockHeight of size span and numberOfSpan length ",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "startBlockHeight",
            "required": true,
            "type": "number"
          },
          {
            "in": "path",
            "maximum": 9223372036854776000,
            "minimum": 1,
            "name": "span",
            "required": true,
            "type": "number"
          },
          {
            "in": "path",
            "maximum": 9223372036854776000,
            "minimum": 1,
            "name": "numberOfSpan",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/BlockSpan"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid `numberOfSpan` or `span` or `startBlockHeight`"
          }
        }
      }
    },
    "/api/v1/oe/git-hash": {
      "get": {
        "description": "returns short hash of commit of the op-energy git repo that had been used to build backend",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GitHashResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "RegisterResult": {
      "description": "RegisterResult schema",
      "required": [
        "accountSecret",
        "accountToken"
      ],
      "properties": {
        "accountSecret": {
          "$ref": "#/definitions/AccountSecret"
        },
        "accountToken": {
          "$ref": "#/definitions/AccountToken"
        }
      },
      "example": {
        "accountSecret": "a86c139a32e7dac42afe4265a955a0fd9d8c2885e26c7e92d4270b3813faa356",
        "accountToken": "a86c139a32e7dac42afe4265a955a0fd9d8c2885e26c7e92d4270b3813faa356"
      },
      "type": "object"
    },
    "AccountSecret": {
      "description": "AccountSecret schema",
      "example": "a86c139a32e7dac42afe4265a955a0fd9d8c2885e26c7e92d4270b3813faa356",
      "type": "string"
    },
    "AccountToken": {
      "description": "AccountToken schema",
      "example": "a86c139a32e7dac42afe4265a955a0fd9d8c2885e26c7e92d4270b3813faa356",
      "type": "string"
    },
    "TimeStrike": {
      "description": "TimeStrike schema",
      "required": [
        "blockHeight",
        "nLockTime",
        "creationTime"
      ],
      "properties": {
        "blockHeight": {
          "$ref": "#/definitions/BlockHeight"
        },
        "nLockTime": {
          "$ref": "#/definitions/NLockTime"
        },
        "creationTime": {
          "$ref": "#/definitions/Positive"
        }
      },
      "example": {
        "blockHeight": 1,
        "creationTime": 1000,
        "nLockTime": 1
      },
      "type": "object"
    },
    "BlockHeight": {
      "description": "BlockHeight schema",
      "example": 1,
      "maximum": 9223372036854776000,
      "minimum": 0,
      "type": "number"
    },
    "NLockTime": {
      "description": "NLockTime schema",
      "example": 1,
      "maximum": 9223372036854776000,
      "minimum": 0,
      "type": "number"
    },
    "Positive": {
      "maximum": 9223372036854776000,
      "minimum": 1,
      "type": "number"
    },
    "CreateTimeStrikeRequest": {
      "description": "CreateTimeStrikeRequest schema",
      "required": [
        "account_token",
        "nlocktime",
        "block_height"
      ],
      "properties": {
        "account_token": {
          "$ref": "#/definitions/AccountToken"
        },
        "nlocktime": {
          "$ref": "#/definitions/NLockTime"
        },
        "block_height": {
          "$ref": "#/definitions/BlockHeight"
        }
      },
      "example": {
        "account_token": "a86c139a32e7dac42afe4265a955a0fd9d8c2885e26c7e92d4270b3813faa356",
        "block_height": 1,
        "nlocktime": 1
      },
      "type": "object"
    },
    "SlowFastGuess": {
      "description": "SlowFastGuess schema",
      "required": [
        "guess",
        "blockHeight",
        "nLockTime",
        "creationTime",
        "userName",
        "userId"
      ],
      "properties": {
        "guess": {
          "$ref": "#/definitions/Guess"
        },
        "blockHeight": {
          "$ref": "#/definitions/BlockHeight"
        },
        "nLockTime": {
          "$ref": "#/definitions/NLockTime"
        },
        "creationTime": {
          "$ref": "#/definitions/Positive"
        },
        "userName": {
          "type": "string"
        },
        "userId": {
          "$ref": "#/definitions/Natural"
        }
      },
      "example": {
        "blockHeight": 1,
        "creationTime": 1,
        "guess": "slow",
        "nLockTime": 1,
        "userId": 0,
        "userName": "someUserName"
      },
      "type": "object"
    },
    "Guess": {
      "enum": [
        "slow",
        "fast"
      ],
      "type": "string"
    },
    "Natural": {
      "maximum": 9223372036854776000,
      "minimum": 0,
      "type": "number"
    },
    "CreateSlowFastGuessRequest": {
      "description": "CreateSlowFastGuessRequest schema",
      "required": [
        "account_token",
        "guess",
        "nlocktime",
        "block_height"
      ],
      "properties": {
        "account_token": {
          "$ref": "#/definitions/AccountToken"
        },
        "guess": {
          "$ref": "#/definitions/Guess"
        },
        "nlocktime": {
          "$ref": "#/definitions/NLockTime"
        },
        "block_height": {
          "$ref": "#/definitions/BlockHeight"
        }
      },
      "example": {
        "account_token": "a86c139a32e7dac42afe4265a955a0fd9d8c2885e26c7e92d4270b3813faa356",
        "block_height": 1,
        "guess": "fast",
        "nlocktime": 1
      },
      "type": "object"
    },
    "TimeStrikeHistory": {
      "description": "TimeStrikeHistory schema",
      "required": [
        "owner",
        "blockHeight",
        "nLockTime",
        "mediantime",
        "creationTime",
        "archiveTime",
        "wrongResults",
        "rightResults"
      ],
      "properties": {
        "owner": {
          "type": "string"
        },
        "blockHeight": {
          "$ref": "#/definitions/BlockHeight"
        },
        "nLockTime": {
          "$ref": "#/definitions/NLockTime"
        },
        "mediantime": {
          "$ref": "#/definitions/Positive"
        },
        "creationTime": {
          "$ref": "#/definitions/Positive"
        },
        "archiveTime": {
          "$ref": "#/definitions/Positive"
        },
        "wrongResults": {
          "$ref": "#/definitions/Natural"
        },
        "rightResults": {
          "$ref": "#/definitions/Natural"
        }
      },
      "example": {
        "archiveTime": 1001,
        "blockHeight": 1,
        "creationTime": 1000,
        "mediantime": 1000,
        "nLockTime": 1,
        "owner": "userName",
        "rightResults": 0,
        "wrongResults": 0
      },
      "type": "object"
    },
    "SlowFastResult": {
      "description": "SlowFastResult schema",
      "required": [
        "guess",
        "result",
        "blockHeight",
        "nLockTime",
        "creationTime"
      ],
      "properties": {
        "guess": {
          "$ref": "#/definitions/Guess"
        },
        "result": {
          "$ref": "#/definitions/Result"
        },
        "blockHeight": {
          "$ref": "#/definitions/BlockHeight"
        },
        "nLockTime": {
          "$ref": "#/definitions/NLockTime"
        },
        "creationTime": {
          "$ref": "#/definitions/Positive"
        }
      },
      "example": {
        "blockHeight": 1,
        "creationTime": 1,
        "guess": "slow",
        "nLockTime": 1,
        "result": "right"
      },
      "type": "object"
    },
    "Result": {
      "enum": [
        "right",
        "wrong"
      ],
      "type": "string"
    },
    "PostUserDisplayNameRequest": {
      "description": "PostUserDisplayNameRequest schema",
      "required": [
        "account_token",
        "display_name"
      ],
      "properties": {
        "account_token": {
          "$ref": "#/definitions/AccountToken"
        },
        "display_name": {
          "type": "string"
        }
      },
      "example": {
        "account_token": "a86c139a32e7dac42afe4265a955a0fd9d8c2885e26c7e92d4270b3813faa356",
        "display_name": "newUserName"
      },
      "type": "object"
    },
    "Statistics": {
      "description": "Statistics schema",
      "required": [
        "nbdr"
      ],
      "properties": {
        "nbdr": {
          "$ref": "#/definitions/NbdrStatistics"
        }
      },
      "example": {
        "nbdr": {
          "avg": 1,
          "stddev": 1
        }
      },
      "type": "object"
    },
    "NbdrStatistics": {
      "description": "NbdrStatistics schema",
      "required": [
        "avg",
        "stddev"
      ],
      "properties": {
        "avg": {
          "format": "double",
          "type": "number"
        },
        "stddev": {
          "format": "double",
          "type": "number"
        }
      },
      "example": {
        "avg": 1,
        "stddev": 1
      },
      "type": "object"
    },
    "Block": {
      "description": "Block schema",
      "required": [
        "id",
        "height",
        "version",
        "timestamp",
        "bits",
        "nonce",
        "difficulty",
        "merkle_root",
        "tx_count",
        "size",
        "weight",
        "previousblockhash",
        "chainwork",
        "mediantime"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "height": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "version": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "timestamp": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "bits": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "nonce": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "difficulty": {
          "format": "double",
          "type": "number"
        },
        "merkle_root": {
          "type": "string"
        },
        "tx_count": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "size": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "weight": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "previousblockhash": {
          "$ref": "#/definitions/BlockHash"
        },
        "chainwork": {
          "type": "string"
        },
        "mediantime": {
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        }
      },
      "example": {
        "bits": 386366690,
        "chainwork": "00000000000000000000000000000000000000003dfd08c2b6932fc194a1fee4",
        "difficulty": 37590453655497.09,
        "height": 772473,
        "id": "0000000000000000000135d442ddb5ad7a8cdf92eb8496265d724804587bdf41",
        "mediantime": 1674012509,
        "merkle_root": "847457eb7723bbe1e60a73ad6ff3016b630bf3595409eaa6a3f45e3cc1b54cf0",
        "nonce": 2589914493,
        "previousblockhash": "00000000000000000004fd7d4e275888070a2c57fbbaa145d576f935f67645f8",
        "size": 1528844,
        "timestamp": 1674018057,
        "tx_count": 2303,
        "version": 538304512,
        "weight": 3992705
      },
      "type": "object"
    },
    "BlockHash": {
      "description": "BlockHash schema",
      "example": "000000000000000000070654ba6de216fc6b5d5c7279e5695b4225d7a6ed993a",
      "type": "string"
    },
    "BlockSpan": {
      "description": "BlockSpan schema",
      "required": [
        "startBlockHeight",
        "endBlockHeight"
      ],
      "properties": {
        "startBlockHeight": {
          "$ref": "#/definitions/BlockHeight"
        },
        "endBlockHeight": {
          "$ref": "#/definitions/BlockHeight"
        }
      },
      "example": {
        "endBlockHeight": 772473,
        "startBlockHeight": 772472
      },
      "type": "object"
    },
    "GitHashResponse": {
      "description": "GitHashResponse schema",
      "required": [
        "gitCommitHash"
      ],
      "properties": {
        "gitCommitHash": {
          "type": "string"
        }
      },
      "example": {
        "gitCommitHash": "12345678"
      },
      "type": "object"
    }
  }
}
